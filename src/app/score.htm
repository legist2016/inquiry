<!DOCTYPE html>
<html>

<head>
	<meta charset="utf-8" />
	<title></title>
	<script src="js/axios.min.js"></script>
	<script src="js/vue.js"></script>
	<style>
		body {
			background-color: burlywood;
			font-size: 40px;
			line-height: 50px;
		}

		.xh {
			background-color: Window;
			line-height: 50px;
			width: 500px;
			height: 50px;
			font-size: 40px;
			padding-left: 5px;
		}

		.input_button {
			display: block;
			width: 50px;
			height: 50px;
			text-align: center;
			vertical-align: middle;
			border-style: outset;
			cursor: pointer;
			line-height: 50px;
			background-color: ButtonFace;
			font-size: 25px;
		}

		.button {
			height: 50px;
			text-align: center;
			vertical-align: middle;
			border-style: outset;
			cursor: pointer;
			line-height: 50px;
			background-color: ButtonFace;
			font-size: 25px;
			padding: 10px;
		}

		#clear_xh {
			float: right;
			border-style: none;
			background-color: Window;
			color: GrayText;
		}

		.alert {
			color: red;
		}

		div#app {}
	</style>
</head>

<body>
	<div id="app" style="display:none;" v-show="loaded">
		<div style="float:right;margin:10px;"><span v-if="delay>0&&delay<60">{{delay}}秒后自动</span>
			<a style="color:blue;text-decoration:none" href="#" @click="back">返回</a></div>
		<span style="font-size:60px;color:red;">本科毕业生成绩单打印</span>
		<div class="alert">{{alert}}</div>
		<div v-show="step==0">
			<div>输入学号或身份证号</div>
			<div class="xh"><span>{{xh}}</span><a class="input_button" id="clear_xh" @click="xh=''">X</a></div>
			<table class="input_pad">
				<tr>
					<td v-for="c in input_chars" @click="xh.length<18?xh+=c:0"><a class="input_button">{{c}}</a></td>
					<td><a class="input_button" @click="xh=xh.slice(0,-1)">退格</a></td>
					<td><a class="input_button" @click="next">确定</a></td>
			</table>
		</div>
		<div v-show="step==1">
			<table>
				<tr>
					<td>学号：</td>
					<td>{{student.XH}}</td>
				</tr>
				<tr>
					<td>姓名：</td>
					<td>{{student.XM}}</td>
				</tr>
				<tr>
					<td>班级：</td>
					<td>{{student.BJ}}</td>
				</tr>
			</table>
			<a class="button" @click="next">打印成绩单</a>
			<a class="button" @click="step--">后退</a>
		</div>
	</div>
	<script>
		var timeoutdelay = 120;
            function timeoutAction() {
                this.back(this.lb);
            }

            function timeout() {
                this.delay--;
                if (this.delay > 0) {
                    //this.timeouthandler = setTimeout(this.timeout.bind(this), 1000);
                    //console.log('timeout ' + this.delay);
                } else if (this.delay == 0) {
                    setTimeout(timeoutAction.bind(this), 1);
                } else {
                    this.delay = 0;
                }
            }
            var app = new Vue({
                el: "#app",
                data: {
                    input_chars: "0123456789X",
                    xh: "",
                    student: {
                        XH: "",
                        XM: "",
                        BJ: "",

                    },
                    printurl: "",
                    loaded: false,
                    delay: timeoutdelay,
                    step: 0,
                    doing: 0,
                    alert:"",
                },
                methods: {
                    init: function () {
                        this.student = {
                            XH: "",
                            XM: "",
                            BJ: "",

                        };
                        this.xh = '';
                        this.step = 0;
                    },
                    next: function (param) {
                        if (this.doing) {
                            this.alert = "正在处理中，请等待";
                            return;
                        }
                        this.doing = true;
                        this.alert = "";
                        console.log(this.step, param)
                        switch (this.step) {
                            case 1:
                                axios.get("score/apply_print", {
                                    params: {
                                        "xh": this.student.XH,
                                        "r": Math.random()
                                    }
                                }).then(
                                    function (res) {
                                        console.log(res.data);
                                        this.doing = 0;
                                    if (res.data) {
                                        window.location.replace(this.printurl + "?route=score&printid=" + res.data.ID + "&backurl=" + window.location.href.replace("score", "index"));
                                            this.init();
                                        } else {
                                            this.alert = ('提交打印失败！');
                                        }

                                    }.bind(this))
                                    .catch(this.neterr)
                                break;
                            case 0:
                                axios.get("score/checkxh", {
                                    params: {
                                        "xh": this.xh,
                                        "r": Math.random()
                                    }
                                }).then(
                                    function (res) {
                                        this.doing = 0;
                                        if (res.data == 0) {
                                            this.student = {
                                                XH: "",
                                                XM: "",
                                                BJ: "",
                                            }
                                            this.alert =('未找到有效成绩单！');
                                        } else {
                                            this.student = res.data;
                                            console.log(res);
                                            this.step = 1;
                                        }
                                    }.bind(this))
                                    .catch(this.neterr)
                                break;
                        }
                    },
                    neterr: function (err) {
                        this.alert=('网络错误！');
                        this.doing = false;
                    },
                    back: function () {
                        if (this.step == 0) {
                            window.location.replace("index.htm")
                        }
                        else {
                            this.init();
                        }
                    }
                },
                created: function () {

                    //return;
                    axios.get("login/islogon", {
                        params: {
                            "action": "islogon",
                            "r": Math.random()
                        }
                    }).then(
                        function (res) {
                            console.log(res);
                            if (res.data.islogin) {
                                this.loaded = true;
                                this.printurl = res.data.printurl;
                            }
                            else {
                                window.name = window.location.href
                                window.location.replace('needlogin.htm')
                                //this.islogon='login'
                            }
                        }.bind(this))
                        .catch(this.neterr)
                },
                watch: {
                    step: function () {
                        if (!this.doing) {
                            //console.log(this.alert);
                            this.alert = '';
                        }
                    }
                }
            });
            setInterval(timeout.bind(app), 1000);
            function resetDelay() {
                this.delay = timeoutdelay;
            }
            document.onmousemove = resetDelay.bind(app)
            document.onmousedown = resetDelay.bind(app)
	</script>
</body>

</html>